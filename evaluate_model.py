import streamlit as st
import pandas as pd
import os

def run():
    st.header("‚úÖ –û—Ü–µ–Ω–∫–∞ –º–æ–¥–µ–ª–∏")
    
    if not os.path.exists("model_predictions_log.csv"):
        st.warning("–õ–æ–≥ —Å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è–º–∏ –ø–æ–∫–∞ –ø—É—Å—Ç.")
        return

    df = pd.read_csv("model_predictions_log.csv")
    df["timestamp"] = pd.to_datetime(df["timestamp"])
    df = df.sort_values("timestamp", ascending=False)

    st.subheader("üìä –ü–æ—Å–ª–µ–¥–Ω–∏–µ 20 –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π")
    st.dataframe(df.head(20), use_container_width=True)

    if len(df) > 30:
        st.subheader("üìà –î–µ–ª—å—Ç–∞ –º–µ–∂–¥—É Long –∏ Short –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–Ω–∏")
        df["delta"] = abs(df["long_4h"] - df["short_4h"])
        st.line_chart(df.set_index("timestamp")["delta"])

    # üéØ –û—Ü–µ–Ω–∫–∞ –ø–æ high_confidence
    if "high_confidence" in df.columns and "eth_close" in df.columns:
        st.subheader("üîç High Confidence Accuracy")
        df = df.sort_values("timestamp")  # –≤–∞–∂–Ω–æ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ .shift()
        df["future_close"] = df["eth_close"].shift(-4)
        df["actual_direction"] = (df["future_close"] > df["eth_close"]).map({True: "long", False: "short"})
        df["model_direction"] = (df["long_4h"] > df["short_4h"]).map({True: "long", False: "short"})

        confident_df = df[df["high_confidence"] == 1].copy()
        confident_df["correct"] = confident_df["actual_direction"] == confident_df["model_direction"]

        accuracy = confident_df["correct"].mean() if not confident_df.empty else 0
        st.metric("üéØ –¢–æ—á–Ω–æ—Å—Ç—å —É–≤–µ—Ä–µ–Ω–Ω—ã—Ö –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π", f"{accuracy * 100:.2f}%")
        st.caption("–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø—Ä–æ–≥–Ω–æ–∑–∞ –º–æ–¥–µ–ª–∏ –∏ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è —Ü–µ–Ω—ã —á–µ—Ä–µ–∑ 4 —á–∞—Å–∞ –Ω–∞ —É–≤–µ—Ä–µ–Ω–Ω—ã—Ö —Ç–æ—á–∫–∞—Ö (prob > 55%, delta > 0.19)")

    st.caption("–î–∞–Ω–Ω—ã–µ —Å–æ–±–∏—Ä–∞—é—Ç—Å—è –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ.")


if __name__ == "__main__":
    run()

